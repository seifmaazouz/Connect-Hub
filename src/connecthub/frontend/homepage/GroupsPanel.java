package connecthub.frontend.homepage;

import connecthub.backend.database.GroupDatabase;
import connecthub.backend.models.User;
import connecthub.backend.models.group.Group;
import connecthub.backend.models.group.GroupMember;
import connecthub.frontend.group.GroupWindow;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class GroupsPanel extends javax.swing.JPanel {
    private User user;
    private List<Group> userGroups;
    private DefaultListModel<Group> listModel;
    private JList<Group> jGroupList;

    public GroupsPanel(User user) {
        this.user = user;
        this.userGroups = new ArrayList<>();
        initComponents();
        loadUserGroups();
        setupGroupList();
    }

    // Method to load the groups that the user is a member of
    private void loadUserGroups() {
        try {
            GroupDatabase groupDatabase = GroupDatabase.getInstance();
            List<Group> groups = groupDatabase.loadGroups();
            userGroups.clear();

            for (Group group : groups) {
                for (GroupMember groupMember : group.getMembers()) {
                    if (groupMember.getUserId().equals(user.getUserId())) {
                        userGroups.add(group);
                        break;
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(GroupsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Method to set up the JList
    private void setupGroupList() {
        if (!userGroups.isEmpty()) {
            // Create the DefaultListModel and add groups
            listModel = new DefaultListModel<>();
            for (Group group : userGroups) {
                listModel.addElement(group);
            }

            // Create the JList and set the model
            jGroupList = new JList<>(listModel);
            jGroupList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            // Add the JList to a scroll pane and then to the panel
            JScrollPane scrollPane = new JScrollPane(jGroupList);
            this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
            this.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Add padding
            this.add(scrollPane);

            // Add ListSelectionListener to open selected group in a new window
            jGroupList.addListSelectionListener(e -> {
                if (!e.getValueIsAdjusting()) {
                    Group selectedGroup = jGroupList.getSelectedValue();
                    if (selectedGroup != null) {
                        new GroupWindow(selectedGroup.getName(), selectedGroup.getPosts(), user, selectedGroup).setVisible(true);
                        System.out.println("Selected Group from list: " + selectedGroup.getName());
                    }
                }
            });
        } else {
            JLabel noGroupsLabel = new JLabel("No groups found.");
            this.add(noGroupsLabel);
        }
    }

    // Refresh the list of groups and update the JList
    public void refresh() throws IOException {
        loadUserGroups(); // Refresh the list of user groups
        if (listModel == null) {
            listModel = new DefaultListModel<>();
        } else {
            listModel.clear(); // Clear the current list model
        }

        for (Group group : userGroups) {
            listModel.addElement(group); // Re-add the refreshed groups
        }

        // Ensure the JList is updated if needed
        if (jGroupList != null) {
            jGroupList.setModel(listModel);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 831, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
